buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.minecraft.version}-${config.computronics.version}"
def asielib_version = "${config.minecraft.version}-${config.asielib.version}"
group = "pl.asie.computronics" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Computronics"

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

repositories {
    maven {
        name = "OC repo"
        url = "http://maven.cil.li"
    }
    maven {
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    /*maven {
        name 'CB Repo'
        url "http://chickenbones.net/maven"
    }*/
    maven {
        name 'tterrag Repo'
        url "http://maven.tterrag.com"
    }
    maven {
        name 'tterrag Repo 2'
        url "http://maven2.tterrag.com"
    }
    maven {
        name = "Forestry and IC2 repo"
        url = "http://maven.ic2.player.to"
    }
    /*maven {
		name = "GregTech"
		url = "http://gregtech.overminddl1.com/"
	}
    maven {
        name = "RX14's Repo"
        url = "http://mvn.rx14.co.uk/repo"
    }*/
	maven {
		name = "CurseForge"
		url = "https://minecraft.curseforge.com/api/maven/"
	}
    ivy {
        name = "BuildCraft"
        artifactPattern "http://www.mod-buildcraft.com/releases/BuildCraft/[revision]/[module]-[revision]-[classifier].[ext]"
    }
    /*maven {
        name = "Charset Maven"
        url = "http://charset.asie.pl/maven"
    }*/
	/*maven {
		name 'MaryTTS repo'
		url 'http://dl.bintray.com/marytts/marytts'
	}*/
    /*maven {
        url = 'http://maven.epoxide.xyz'
    }*/
    maven {
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        url "http://repo.elytradev.com"
    }
    maven {
        url "http://maven.amadornes.com"
    }
    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }
    maven {
        name = "CurseForge Maven"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    ivy {
        name = "RailCraft"
        url = "http://www.railcraft.info/ivy/"
    }
}

configurations {
	provided
	provided2
	embedded
	compile.extendsFrom provided, provided2, embedded
}

dependencies {
    provided "li.cil.oc:OpenComputers:${config.oc.version}"
    deobfCompile "li.cil.tis3d:TIS-3D:${config.tis3d.version}"
    //deobfCompile "net.industrial-craft:industrialcraft-2:${config.ic2.version}:dev"
	//provided "com.gregoriust.gregtech:gregtech_1.7.10:${config.gregtech.version}:dev"
	//provided2 "com.gregoriust.gregtech:gregtech_1.7.10:${config.gregtech6.version}:dev"
    provided ("com.headlamp-games:railcraft:${config.railcraft.version}:dev") {
        exclude module: "forestry_1.12.2"
        exclude module: "industrialcraft-2"
    }
    //provided "com.gregoriust.gregtech:gregtech_1.7.10:${config.gregtech.version}:dev"
    deobfCompile "mezz.jei:jei_1.12.2:${config.jei.version}"
    provided "mcp.mobius.waila:Waila:${config.waila.version}"
    deobfCompile "mcjty.theoneprobe:TheOneProbe-1.12:${config.top.version}"

    deobfCompile "charset-lib:Charset:Lib:${config.charset.version}"
    deobfCompile "charset-audio:Charset:Audio:${config.charset.version}"
    deobfCompile "simplelogic-wires:SimpleLogic:Wires:${config.simplelogic.version}"
    deobfCompile "MCMultiPart2:MCMultiPart:${config.mcmp.version}"
    deobfCompile "com.enderio.core:EnderCore:${config.minecraft.version}-${config.endercore.version}"
	compile "info.loenwind.autoconfig:AutoConfig:${config.minecraft.version}-${config.autoconfig.version}"
    compile "info.loenwind.autosave:AutoSave:${config.minecraft.version}-${config.autosave.version}"
    deobfCompile("com.enderio:EnderIO:${config.minecraft.version}-${config.enderio.version}") {
        exclude module: "appliedenergistics2"
        exclude module: "buildcraft"
        exclude module: "Waila"
        exclude module: "forestry_1.12.2"
        exclude module: "OpenComputers"
        exclude module: "CodeChickenLib"
        exclude module: "CodeChickenCore"
        exclude module: "jei"
        exclude module: "EnderCore"
    }
    deobfCompile("net.sengir.forestry:forestry_1.12.2:${config.forestry.version}") {
        exclude module: "buildcraft"
        exclude module: "industrialcraft-2"
        exclude module: "jei"
    }
    //compile name: "buildcraft", version: "${config.buildcraft.version}", classifier: "dev"
    /*compile("appeng:appliedenergistics2:${config.ae2.version}:dev") {
        transitive = false
    }*/
    /*compile("riskyken.armourersWorkshop:Armourers-Workshop:1.7.10-${config.am.version}:deobf"){
        transitive = false
    }*/
    //provided("com.bluepowermod:BluePower:${config.bluepower.version}:deobf") {
    //	transitive = false
    //}
    //provided("qmunity:QmunityLib:${config.qmunitylib.version}:deobf") {
    //	transitive = false
    //}
    provided "albedo:albedo:${config.albedo.version}"
    provided "com.elytradev:mirage:${config.mirage.version}"
    compile fileTree(dir: "libs", includes: ['*.jar', '*.zip'])
}

minecraft {
    version = "${config.minecraft.version}-${config.forge.version}"
    runDir = "eclipse"
    mappings = config.mappings

    replaceIn "pl/asie/computronics/Computronics.java"
    replace "@VERSION@", "${config.computronics.version}"

    replaceIn "pl/asie/lib/AsieLibMod.java"
    replace "@AL_VERSION@", "${config.asielib.version}"
}

sourceSets {
    main {
        //output.resourcesDir = 'build/classes/main'
        java {
            exclude "pl/asie/computronics/client/**"
            exclude "pl/asie/computronics/integration/appeng/**"
            exclude "pl/asie/computronics/integration/armourersworkshop/**"
            exclude "pl/asie/computronics/integration/betterstorage/**"
            exclude "pl/asie/computronics/integration/buildcraft/**"
            exclude "pl/asie/computronics/integration/buildcraft/pluggable/**"
            //exclude "pl/asie/computronics/integration/charset/**"
            //exclude "pl/asie/computronics/integration/charset/wires/**"
            exclude "pl/asie/computronics/integration/cofh/**"
            exclude "pl/asie/computronics/integration/draconicevolution/**"
            //exclude "pl/asie/computronics/integration/enderio/**"
            exclude "pl/asie/computronics/integration/factorization/**"
            //exclude "pl/asie/computronics/integration/forestry/**"
            exclude "pl/asie/computronics/integration/fsp/**"
            exclude "pl/asie/computronics/integration/gregtech/**"
            exclude "pl/asie/computronics/integration/mekanism/**"
            exclude "pl/asie/computronics/integration/mfr/**"
            //exclude "pl/asie/computronics/integration/railcraft/**"
            exclude "pl/asie/computronics/integration/redlogic/**"
            //exclude "pl/asie/computronics/integration/storagedrawers/**"
            //exclude "pl/asie/computronics/integration/info/**"

            exclude "pl/asie/lib/integration/buildcraft/*"
            exclude "pl/asie/lib/integration/tool/appeng/**"
            exclude "pl/asie/lib/integration/tool/cofh/**"
            exclude "pl/asie/lib/integration/tool/mekanism/**"
            exclude "pl/asie/lib/integration/tool/buildcraft/**"
            //exclude "pl/asie/lib/integration/tool/enderio/**"
        }
    }
}

/*jar {
	exclude 'cofh/**'
}*/

apply plugin: 'idea'
idea {
    module {
        scopes.PROVIDED.plus += [configurations.provided]
		scopes.PROVIDED.plus += [configurations.provided2]
        outputDir = file('build/classes/main')
    }
}

processResources
        {
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version
            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version, 'asielib_version': asielib_version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

//For Building

def libDir = './build/libs'

task deobfJar(type: Jar) {
    description = 'Creates a jar file containing the non-obfuscated class files'
    classifier = 'deobf'
    destinationDir = file(libDir)
    from sourceSets.main.output
    exclude 'cofh/**'
}

task apiZip(type: Zip) {
    description = 'Creates a zip file containing the API source files only'
    classifier = 'api'
    destinationDir = file(libDir)
    from sourceSets.main.allSource
    include 'pl/asie/**/api/**'
}

task makeJars << {
    description = 'Creates the mod files'
}

makeJars.dependsOn clean, build, deobfJar, apiZip
build.shouldRunAfter clean
deobfJar.shouldRunAfter build
apiZip.shouldRunAfter deobfJar
